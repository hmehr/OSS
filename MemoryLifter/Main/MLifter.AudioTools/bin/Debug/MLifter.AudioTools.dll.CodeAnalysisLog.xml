<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Namespaces>
  <Namespace Name="LameDOTnet">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'LameDOTnet' with another namespace.</Issue>
    </Message>
    <Message Id="Tnet" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tnet' in namespace name 'LameDOTnet'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="LumiSoft.Media.Wave">
   <Messages>
    <Message Id="Lumi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lumi' in namespace name 'LumiSoft.Media.Wave'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MLifter.AudioTools.Codecs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'MLifter.AudioTools.Codecs' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="MLifterAudioTools.Codecs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'MLifterAudioTools.Codecs' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\bin\Debug\MLifter.AudioTools.dll">
   <Modules>
    <Module Name="mlifter.audiotools.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'MLifter.AudioTools.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'MLifter.AudioTools.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'MLifter.AudioTools.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="LameDOTnet">
       <Types>
        <Type Name="Lame" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(LameDOTnet.Lame+MP3_Settings,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="919">'Lame.Lame(Lame.MP3_Settings, int, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Channels" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="820">In member 'Lame.Lame(Lame.MP3_Settings, int, int)', correct the casing of 'Channels' in parameter name 'Channels' by changing it to 'channels'.</Issue>
            </Message>
            <Message Id="Sample" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="820">In member 'Lame.Lame(Lame.MP3_Settings, int, int)', correct the casing of 'Sample' in parameter name 'SampleRate' by changing it to 'sample'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,LameDOTnet.Lame+MP3_Settings)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="941">'Lame.Lame(string, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="820">In member 'Lame.Lame(string, Lame.MP3_Settings)', correct the casing of 'Input' in parameter name 'InputWaveFile' by changing it to 'input'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beCloseStream(System.UInt32)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beCloseStream(uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beCloseStream(uint)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beCloseStream(uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beCloseStream(uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beDeinitStream(System.UInt32,System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Output' be an out parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Written' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beDeinitStream(uint, byte[], ref uint)', correct the casing of 'Output' in parameter name 'Output' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beDeinitStream(uint, byte[], ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="Written" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beDeinitStream(uint, byte[], ref uint)', correct the casing of 'Written' in parameter name 'Written' by changing it to 'written'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beDeinitStream(uint, byte[], ref uint)' by changing it to 'Be'.</Issue>
            </Message>
            <Message Id="Deinit" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Deinit' in member name 'Lame.beDeinitStream(uint, byte[], ref uint)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beDeinitStream(uint, byte[], ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beDeinitStream(uint, byte[], ref uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beEncodeChunk(System.UInt32,System.UInt32,System.Int16[],System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'Lame.beEncodeChunk(uint, uint, short[], byte[], ref uint)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beEncodeChunk(uint, uint, short[], byte[], ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beEncodeChunk(System.UInt32,System.UInt32,System.IntPtr,System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beEncodeChunk(uint, uint, IntPtr, byte[], ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beEncodeChunkFloatS16NI(System.UInt32,System.UInt32,System.Single[],System.Single[],System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Output' be an out parameter.</Issue>
            </Message>
            <Message Id="5#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Written' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'Output' in parameter name 'Output' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Samples" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'Samples' in parameter name 'Samples' by changing it to 'samples'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="Written" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'Written' in parameter name 'Written' by changing it to 'written'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)' by changing it to 'Be'.</Issue>
            </Message>
            <Message Id="l" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'l' in parameter name 'buffer_l' by changing it to 'L'.</Issue>
            </Message>
            <Message Id="r" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', correct the casing of 'r' in parameter name 'buffer_r' by changing it to 'R'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', remove the underscores from parameter name 'buffer_l'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error">In member 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)', remove the underscores from parameter name 'buffer_r'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beEncodeChunkFloatS16NI(uint, uint, float[], float[], byte[], ref uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beFlushNoGap(System.UInt32,System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Output' be an out parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Written' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beFlushNoGap(uint, byte[], ref uint)', correct the casing of 'Output' in parameter name 'Output' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beFlushNoGap(uint, byte[], ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="Written" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beFlushNoGap(uint, byte[], ref uint)', correct the casing of 'Written' in parameter name 'Written' by changing it to 'written'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beFlushNoGap(uint, byte[], ref uint)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beFlushNoGap(uint, byte[], ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beFlushNoGap(uint, byte[], ref uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beInitStream(LameDOTnet.Lame+LAME_CONFIG,System.UInt32&amp;,System.UInt32&amp;,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'Samples' be a reference parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'OutputBufferSize' be a reference parameter.</Issue>
            </Message>
            <Message Id="3#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'StreamHandle' be a reference parameter.</Issue>
            </Message>
            <Message Id="Config" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)', correct the casing of 'Config' in parameter name 'Config' by changing it to 'config'.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)', correct the casing of 'Output' in parameter name 'OutputBufferSize' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Samples" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)', correct the casing of 'Samples' in parameter name 'Samples' by changing it to 'samples'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beInitStream(Lame.LAME_CONFIG, ref uint, ref uint, ref uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beVersion(LameDOTnet.Lame+LAME_VERSION)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'version' be an out parameter.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beVersion(Lame.LAME_VERSION)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beVersion(Lame.LAME_VERSION)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beVersion(Lame.LAME_VERSION)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="LAME_VERSION.zHomepage" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="FieldImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal field 'Lame.LAME_VERSION.zHomepage' as Unicode, by setting StructLayout.CharSet on 'Lame.LAME_VERSION' to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beWriteInfoTag(System.UInt32,System.String)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beWriteInfoTag(uint, string)', correct the casing of 'File' in parameter name 'FileName' by changing it to 'file'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beWriteInfoTag(uint, string)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beWriteInfoTag(uint, string)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beWriteInfoTag(uint, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beWriteInfoTag(uint, string)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'FileName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#beWriteVBRHeader(System.String)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="MP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Lame.beWriteVBRHeader(string)', correct the casing of 'MP' in parameter name 'MP3FileName' by changing it to 'mp'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.beWriteVBRHeader(string)' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message Id="be" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'be' in member name 'Lame.beWriteVBRHeader(string)' by changing it to 'Be'.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.beWriteVBRHeader(string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'Lame.beWriteVBRHeader(string)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'MP3FileName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Close()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LameDOTnet.Lame.beCloseStream(System.UInt32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="1017">'Lame.Close()' calls 'Lame.beCloseStream(uint)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Close(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LameDOTnet.Lame.beCloseStream(System.UInt32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="1045">'Lame.Close(byte[])' calls 'Lame.beCloseStream(uint)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeChunk(System.Byte[],System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="994">'Lame.EncodeChunk(byte[], byte[])' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="989">In member 'Lame.EncodeChunk(byte[], byte[])', correct the casing of 'Input' in parameter name 'InputBuffer' by changing it to 'input'.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="989">In member 'Lame.EncodeChunk(byte[], byte[])', correct the casing of 'Output' in parameter name 'OutputBuffer' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="InputBuffer" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="989">'InputBuffer', a parameter declared in 'Lame.EncodeChunk(byte[], byte[])', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="OutputBuffer" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="989">'OutputBuffer', a parameter declared in 'Lame.EncodeChunk(byte[], byte[])', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeChunk(System.UInt32,System.Byte[],System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="747">Consider a design that does not require that 'Written' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="747">In member 'Lame.EncodeChunk(uint, byte[], byte[], ref uint)', correct the casing of 'Output' in parameter name 'Output' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="747">In member 'Lame.EncodeChunk(uint, byte[], byte[], ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="Written" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="747">In member 'Lame.EncodeChunk(uint, byte[], byte[], ref uint)', correct the casing of 'Written' in parameter name 'Written' by changing it to 'written'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="748">In externally visible method 'Lame.EncodeChunk(uint, byte[], byte[], ref uint)', validate parameter 'buffer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeChunk(System.UInt32,System.Byte[],System.Int32,System.UInt32,System.Byte[],System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="5#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="719">Consider a design that does not require that 'Written' be a reference parameter.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="719">In member 'Lame.EncodeChunk(uint, byte[], int, uint, byte[], ref uint)', correct the casing of 'Output' in parameter name 'Output' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="Stream" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="719">In member 'Lame.EncodeChunk(uint, byte[], int, uint, byte[], ref uint)', correct the casing of 'Stream' in parameter name 'StreamHandle' by changing it to 'stream'.</Issue>
            </Message>
            <Message Id="Written" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="719">In member 'Lame.EncodeChunk(uint, byte[], int, uint, byte[], ref uint)', correct the casing of 'Written' in parameter name 'Written' by changing it to 'written'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeWAV(System.String,System.Delegate)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="975">'Lame.EncodeWAV(string, Delegate)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="955">In member 'Lame.EncodeWAV(string, Delegate)', correct the casing of 'Output' in parameter name 'OutputMP3File' by changing it to 'output'.</Issue>
            </Message>
            <Message Id="WAV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="955">Correct the casing of 'WAV' in member name 'Lame.EncodeWAV(string, Delegate)' by changing it to 'Wav'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="979">In externally visible method 'Lame.EncodeWAV(string, Delegate)', validate parameter 'status' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSoundFileInfo(System.String,LameDOTnet.Lame+SOUND_INFO&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="803">In member 'Lame.GetSoundFileInfo(string, ref Lame.SOUND_INFO)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="803">Consider a design that does not require that 'soundInfo' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="803">The 'this' parameter (or 'Me' in Visual Basic) of 'Lame.GetSoundFileInfo(string, ref Lame.SOUND_INFO)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="c" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="807">'Lame.GetSoundFileInfo(string, ref Lame.SOUND_INFO)' declares a variable, 'c', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVersion()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="1058">Change 'Lame.GetVersion()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sf_close(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.sf_close(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sf_error(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.sf_error(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sf_open(System.String,System.Int32,LameDOTnet.Lame+SOUND_INFO&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'Lame.sf_open(string, int, ref Lame.SOUND_INFO)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'path' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+ACC" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="ACC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'ACC' in type name 'Lame.ACC' by changing it to 'Acc'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Lame.ACC' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Lame.ACC' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#byEncodingMethod" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.ACC.byEncodingMethod' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.ACC.byMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwSampleRate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.ACC.dwSampleRate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.ACC.dwSampleRate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wBitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.ACC.wBitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+config" Kind="Class" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="config" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'config' in type name 'Lame.config' by changing it to 'Config'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#acc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.config.acc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="acc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'acc' in member name 'Lame.config.acc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lhv1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.config.lhv1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lhv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lhv' in member name 'Lame.config.lhv1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mp3" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.config.mp3' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="mp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'mp' in member name 'Lame.config.mp3' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+LAME_CONFIG" Kind="Class" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="CONFIG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CONFIG' in type name 'Lame.LAME_CONFIG' by changing it to 'Config'.</Issue>
          </Message>
          <Message Id="LAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LAME' in type name 'Lame.LAME_CONFIG' by changing it to 'Lame'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.LAME_CONFIG'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BE_CONFIG_LAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONFIG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONFIG' in member name 'Lame.LAME_CONFIG.BE_CONFIG_LAME' by changing it to 'Config'.</Issue>
            </Message>
            <Message Id="LAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LAME' in member name 'Lame.LAME_CONFIG.BE_CONFIG_LAME' by changing it to 'Lame'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_CONFIG.BE_CONFIG_LAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BE_CONFIG_MP3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONFIG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONFIG' in member name 'Lame.LAME_CONFIG.BE_CONFIG_MP3' by changing it to 'Config'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_CONFIG.BE_CONFIG_MP3'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwConfig" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_CONFIG.dwConfig' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LAME_CONFIG.dwConfig' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#union" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_CONFIG.union' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+LAME_ERR" Kind="Enum" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'Lame.LAME_ERR' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message Id="ERR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'ERR' in type name 'Lame.LAME_ERR' by changing it to 'Err'.</Issue>
          </Message>
          <Message Id="LAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LAME' in type name 'Lame.LAME_ERR' by changing it to 'Lame'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.LAME_ERR'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#INVALID_FORMAT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in member name 'Lame.LAME_ERR.INVALID_FORMAT' by changing it to 'Format'.</Issue>
            </Message>
            <Message Id="INVALID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INVALID' in member name 'Lame.LAME_ERR.INVALID_FORMAT' by changing it to 'Invalid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_ERR.INVALID_FORMAT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INVALID_FORMAT_PARAMETERS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in member name 'Lame.LAME_ERR.INVALID_FORMAT_PARAMETERS' by changing it to 'Format'.</Issue>
            </Message>
            <Message Id="INVALID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INVALID' in member name 'Lame.LAME_ERR.INVALID_FORMAT_PARAMETERS' by changing it to 'Invalid'.</Issue>
            </Message>
            <Message Id="PARAMETERS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PARAMETERS' in member name 'Lame.LAME_ERR.INVALID_FORMAT_PARAMETERS' by changing it to 'Parameters'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_ERR.INVALID_FORMAT_PARAMETERS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INVALID_HANDLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HANDLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HANDLE' in member name 'Lame.LAME_ERR.INVALID_HANDLE' by changing it to 'Handle'.</Issue>
            </Message>
            <Message Id="INVALID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INVALID' in member name 'Lame.LAME_ERR.INVALID_HANDLE' by changing it to 'Invalid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_ERR.INVALID_HANDLE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NO_MORE_HANDLES" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HANDLES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HANDLES' in member name 'Lame.LAME_ERR.NO_MORE_HANDLES' by changing it to 'Handles'.</Issue>
            </Message>
            <Message Id="MORE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MORE' in member name 'Lame.LAME_ERR.NO_MORE_HANDLES' by changing it to 'More'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_ERR.NO_MORE_HANDLES'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SUCCESSFUL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SUCCESSFUL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUCCESSFUL' in member name 'Lame.LAME_ERR.SUCCESSFUL' by changing it to 'Successful'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+LAME_QUALITY_PRESET" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LAME' in type name 'Lame.LAME_QUALITY_PRESET' by changing it to 'Lame'.</Issue>
          </Message>
          <Message Id="PRESET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PRESET' in type name 'Lame.LAME_QUALITY_PRESET' by changing it to 'Preset'.</Issue>
          </Message>
          <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in type name 'Lame.LAME_QUALITY_PRESET' by changing it to 'Quality'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.LAME_QUALITY_PRESET'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Lame.LAME_QUALITY_PRESET'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LQP_ABR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ABR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ABR' in member name 'Lame.LAME_QUALITY_PRESET.LQP_ABR' by changing it to 'Abr'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_ABR' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_ABR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_AM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_AM' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_AM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_CBR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CBR' in member name 'Lame.LAME_QUALITY_PRESET.LQP_CBR' by changing it to 'Cbr'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_CBR' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_CBR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_CD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_CD' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_CD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_EXTREME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXTREME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXTREME' in member name 'Lame.LAME_QUALITY_PRESET.LQP_EXTREME' by changing it to 'Extreme'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_EXTREME' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_EXTREME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_FAST_EXTREME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXTREME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXTREME' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_EXTREME' by changing it to 'Extreme'.</Issue>
            </Message>
            <Message Id="FAST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FAST' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_EXTREME' by changing it to 'Fast'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_EXTREME' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_EXTREME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_FAST_MEDIUM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FAST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FAST' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_MEDIUM' by changing it to 'Fast'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_MEDIUM' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="MEDIUM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MEDIUM' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_MEDIUM' by changing it to 'Medium'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_MEDIUM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_FAST_STANDARD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FAST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FAST' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_STANDARD' by changing it to 'Fast'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_STANDARD' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="STANDARD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STANDARD' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_STANDARD' by changing it to 'Standard'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_FAST_STANDARD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_FM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_FM' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_FM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_HIFI" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HIFI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HIFI' in member name 'Lame.LAME_QUALITY_PRESET.LQP_HIFI' by changing it to 'Hifi'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_HIFI' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_HIFI'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_HIGH_QUALITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HIGH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HIGH' in member name 'Lame.LAME_QUALITY_PRESET.LQP_HIGH_QUALITY' by changing it to 'High'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_HIGH_QUALITY' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in member name 'Lame.LAME_QUALITY_PRESET.LQP_HIGH_QUALITY' by changing it to 'Quality'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_HIGH_QUALITY'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_INSANE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INSANE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INSANE' in member name 'Lame.LAME_QUALITY_PRESET.LQP_INSANE' by changing it to 'Insane'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_INSANE' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_INSANE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_LOW_QUALITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOW' in member name 'Lame.LAME_QUALITY_PRESET.LQP_LOW_QUALITY' by changing it to 'Low'.</Issue>
            </Message>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_LOW_QUALITY' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in member name 'Lame.LAME_QUALITY_PRESET.LQP_LOW_QUALITY' by changing it to 'Quality'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_LOW_QUALITY'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_MEDIUM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_MEDIUM' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="MEDIUM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MEDIUM' in member name 'Lame.LAME_QUALITY_PRESET.LQP_MEDIUM' by changing it to 'Medium'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_MEDIUM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_NOPRESET" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_NOPRESET' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="NOPRESET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOPRESET' in member name 'Lame.LAME_QUALITY_PRESET.LQP_NOPRESET' by changing it to 'Nopreset'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_NOPRESET'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_NORMAL_QUALITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_NORMAL_QUALITY' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="NORMAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NORMAL' in member name 'Lame.LAME_QUALITY_PRESET.LQP_NORMAL_QUALITY' by changing it to 'Normal'.</Issue>
            </Message>
            <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in member name 'Lame.LAME_QUALITY_PRESET.LQP_NORMAL_QUALITY' by changing it to 'Quality'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_NORMAL_QUALITY'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_PHONE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_PHONE' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="PHONE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PHONE' in member name 'Lame.LAME_QUALITY_PRESET.LQP_PHONE' by changing it to 'Phone'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_PHONE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_R3MIX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_R3MIX' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="MIX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIX' in member name 'Lame.LAME_QUALITY_PRESET.LQP_R3MIX' by changing it to 'Mix'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_R3MIX'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_RADIO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_RADIO' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="RADIO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RADIO' in member name 'Lame.LAME_QUALITY_PRESET.LQP_RADIO' by changing it to 'Radio'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_RADIO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_STANDARD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_STANDARD' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="STANDARD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STANDARD' in member name 'Lame.LAME_QUALITY_PRESET.LQP_STANDARD' by changing it to 'Standard'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_STANDARD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_STUDIO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_STUDIO' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="STUDIO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STUDIO' in member name 'Lame.LAME_QUALITY_PRESET.LQP_STUDIO' by changing it to 'Studio'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_STUDIO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_SW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_SW' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_SW'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_TAPE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_TAPE' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="TAPE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TAPE' in member name 'Lame.LAME_QUALITY_PRESET.LQP_TAPE' by changing it to 'Tape'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_TAPE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_VERYHIGH_QUALITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VERYHIGH_QUALITY' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VERYHIGH_QUALITY' by changing it to 'Quality'.</Issue>
            </Message>
            <Message Id="VERYHIGH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VERYHIGH' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VERYHIGH_QUALITY' by changing it to 'Veryhigh'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_VERYHIGH_QUALITY'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_VOICE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="VOICE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VOICE' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE' by changing it to 'Voice'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LQP_VOICE_QUALITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LQP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LQP' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE_QUALITY' by changing it to 'Lqp'.</Issue>
            </Message>
            <Message Id="QUALITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUALITY' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE_QUALITY' by changing it to 'Quality'.</Issue>
            </Message>
            <Message Id="VOICE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VOICE' in member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE_QUALITY' by changing it to 'Voice'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_QUALITY_PRESET.LQP_VOICE_QUALITY'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+LAME_VERSION" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LAME' in type name 'Lame.LAME_VERSION' by changing it to 'Lame'.</Issue>
          </Message>
          <Message Id="VERSION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'VERSION' in type name 'Lame.LAME_VERSION' by changing it to 'Version'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.LAME_VERSION'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Lame.LAME_VERSION'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BE_MAX_HOMEPAGE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HOMEPAGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HOMEPAGE' in member name 'Lame.LAME_VERSION.BE_MAX_HOMEPAGE' by changing it to 'Homepage'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'Lame.LAME_VERSION.BE_MAX_HOMEPAGE' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.LAME_VERSION.BE_MAX_HOMEPAGE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btReserved" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.btReserved' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'Lame.LAME_VERSION.btReserved' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byAlphaLevel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byAlphaLevel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byBetaLevel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byBetaLevel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byDay" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byDay' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byDLLMajorVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byDLLMajorVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byDLLMinorVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byDLLMinorVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMajorVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byMajorVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMinorVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byMinorVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMMXEnabled" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byMMXEnabled' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMonth" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.byMonth' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wYear" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.wYear' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#zHomepage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LAME_VERSION.zHomepage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+LameHeaderVersion1" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Lame.LameHeaderVersion1' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Lame.LameHeaderVersion1' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(LameDOTnet.Lame+SOUND_INFO,LameDOTnet.Lame+MP3_Settings)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="495">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' has a cyclomatic complexity of 46. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="499">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="520">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="537">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="561">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="571">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Lame.cs" Line="575">'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Lame.LameHeaderVersion1.LameHeaderVersion1(Lame.SOUND_INFO, Lame.MP3_Settings)', validate parameter 'settings' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bCopyright" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bCopyright' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bCRC" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bCRC' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bEnableVBR" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bEnableVBR' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bNoRes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bNoRes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bOriginal" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bOriginal' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bPrivate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bPrivate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bStrictIso" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bStrictIso' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Iso" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Iso' in member name 'Lame.LameHeaderVersion1.bStrictIso' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bWriteVBRHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.bWriteVBRHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwBitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwBitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwBitrate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwEmphasis" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwEmphasis' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwEmphasis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwMaxBitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwMaxBitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwMaxBitrate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwMpegVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwMpegVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwMpegVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwPsyModel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwPsyModel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Psy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Psy' in member name 'Lame.LameHeaderVersion1.dwPsyModel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwPsyModel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwReSampleRate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ReSample" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'ReSample' in member name 'Lame.LameHeaderVersion1.dwReSampleRate' exists as a discrete term. If your usage is intended to be single word, case it as 'Resample' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwReSampleRate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwReSampleRate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwSampleRate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwSampleRate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwSampleRate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwStructSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwStructSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwStructSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwStructVersion" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwStructVersion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwStructVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwVbrAbr_bps" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.dwVbrAbr_bps' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Abr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Abr' in member name 'Lame.LameHeaderVersion1.dwVbrAbr_bps' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Vbr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vbr' in member name 'Lame.LameHeaderVersion1.dwVbrAbr_bps' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.LameHeaderVersion1.dwVbrAbr_bps' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MPEG1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MPEG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MPEG' in member name 'Lame.LameHeaderVersion1.MPEG1' by changing it to 'Mpeg'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MPEG2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MPEG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MPEG' in member name 'Lame.LameHeaderVersion1.MPEG2' by changing it to 'Mpeg'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.nMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nPreset" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.nPreset' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nQuality" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.nQuality' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nVbrMethod" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.nVbrMethod' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Vbr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vbr' in member name 'Lame.LameHeaderVersion1.nVbrMethod' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nVBRQuality" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.LameHeaderVersion1.nVBRQuality' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+MP3" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Lame.MP3' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Lame.MP3' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#bCopyright" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.bCopyright' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bCRC" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.bCRC' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bOriginal" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.bOriginal' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bPrivate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.bPrivate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#byMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.byMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwSampleRate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.dwSampleRate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'Lame.MP3.dwSampleRate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wBitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3.wBitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+MP3_Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.MP3_Settings'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Lame.MP3_Settings'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Bitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.Bitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyrightBit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.CopyrightBit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CRC_Bit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.CRC_Bit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisableBitReservoir" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.DisableBitReservoir' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OriginalBit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.OriginalBit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrivatBit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.PrivatBit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Privat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Privat' in member name 'Lame.MP3_Settings.PrivatBit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QualityPreset" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.QualityPreset' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StrictISOencoding" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.StrictISOencoding' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Oencoding" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Oencoding' in member name 'Lame.MP3_Settings.StrictISOencoding' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_enabled" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.VBR_enabled' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_maxBitrate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.VBR_maxBitrate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_method" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.VBR_method' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_Quality" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.VBR_Quality' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_WriteHeader" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.MP3_Settings.VBR_WriteHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+MPEG_MODE" Kind="Enum" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'Lame.MPEG_MODE' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message Id="MODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'MODE' in type name 'Lame.MPEG_MODE' by changing it to 'Mode'.</Issue>
          </Message>
          <Message Id="MPEG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'MPEG' in type name 'Lame.MPEG_MODE' by changing it to 'Mpeg'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.MPEG_MODE'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DUAL_CHANNEL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CHANNEL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CHANNEL' in member name 'Lame.MPEG_MODE.DUAL_CHANNEL' by changing it to 'Channel'.</Issue>
            </Message>
            <Message Id="DUAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DUAL' in member name 'Lame.MPEG_MODE.DUAL_CHANNEL' by changing it to 'Dual'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.MPEG_MODE.DUAL_CHANNEL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JOINT_STEREO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="JOINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'JOINT' in member name 'Lame.MPEG_MODE.JOINT_STEREO' by changing it to 'Joint'.</Issue>
            </Message>
            <Message Id="STEREO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEREO' in member name 'Lame.MPEG_MODE.JOINT_STEREO' by changing it to 'Stereo'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.MPEG_MODE.JOINT_STEREO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_INDICATOR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INDICATOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INDICATOR' in member name 'Lame.MPEG_MODE.MAX_INDICATOR' by changing it to 'Indicator'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'Lame.MPEG_MODE.MAX_INDICATOR' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.MPEG_MODE.MAX_INDICATOR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MONO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MONO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MONO' in member name 'Lame.MPEG_MODE.MONO' by changing it to 'Mono'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NOT_SET" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'Lame.MPEG_MODE.NOT_SET' by changing it to 'Not'.</Issue>
            </Message>
            <Message Id="SET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SET' in member name 'Lame.MPEG_MODE.NOT_SET' by changing it to 'Set'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.MPEG_MODE.NOT_SET'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STEREO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="STEREO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEREO' in member name 'Lame.MPEG_MODE.STEREO' by changing it to 'Stereo'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+SOUND_FORMAT" Kind="Enum" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in type name 'Lame.SOUND_FORMAT' by changing it to 'Format'.</Issue>
          </Message>
          <Message Id="SOUND" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SOUND' in type name 'Lame.SOUND_FORMAT' by changing it to 'Sound'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.SOUND_FORMAT'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ADPCM_IMA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ADPCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ADPCM' in member name 'Lame.SOUND_FORMAT.ADPCM_IMA' by changing it to 'Adpcm'.</Issue>
            </Message>
            <Message Id="IMA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IMA' in member name 'Lame.SOUND_FORMAT.ADPCM_IMA' by changing it to 'Ima'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ADPCM_IMA'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ADPCM_MS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ADPCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ADPCM' in member name 'Lame.SOUND_FORMAT.ADPCM_MS' by changing it to 'Adpcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ADPCM_MS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AIFF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AIFF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AIFF' in member name 'Lame.SOUND_FORMAT.AIFF' by changing it to 'Aiff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ALAW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ALAW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ALAW' in member name 'Lame.SOUND_FORMAT.ALAW' by changing it to 'Alaw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DOUBLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DOUBLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DOUBLE' in member name 'Lame.SOUND_FORMAT.DOUBLE' by changing it to 'Double'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DPCM_16" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DPCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DPCM' in member name 'Lame.SOUND_FORMAT.DPCM_16' by changing it to 'Dpcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DPCM_16'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DPCM_8" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DPCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DPCM' in member name 'Lame.SOUND_FORMAT.DPCM_8' by changing it to 'Dpcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DPCM_8'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DWVM_N" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DWVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DWVM' in member name 'Lame.SOUND_FORMAT.DWVM_N' by changing it to 'Dwvm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DWVM_N'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DWVW_12" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DWVW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DWVW' in member name 'Lame.SOUND_FORMAT.DWVW_12' by changing it to 'Dwvw'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DWVW_12'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DWVW_16" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DWVW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DWVW' in member name 'Lame.SOUND_FORMAT.DWVW_16' by changing it to 'Dwvw'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DWVW_16'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DWVW_24" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DWVW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DWVW' in member name 'Lame.SOUND_FORMAT.DWVW_24' by changing it to 'Dwvw'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DWVW_24'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DX_ADPCM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ADPCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ADPCM' in member name 'Lame.SOUND_FORMAT.DX_ADPCM' by changing it to 'Adpcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.DX_ADPCM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ENDIAN_BIG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BIG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BIG' in member name 'Lame.SOUND_FORMAT.ENDIAN_BIG' by changing it to 'Big'.</Issue>
            </Message>
            <Message Id="ENDIAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ENDIAN' in member name 'Lame.SOUND_FORMAT.ENDIAN_BIG' by changing it to 'Endian'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ENDIAN_BIG'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ENDIAN_CPU" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CPU' in member name 'Lame.SOUND_FORMAT.ENDIAN_CPU' by changing it to 'Cpu'.</Issue>
            </Message>
            <Message Id="ENDIAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ENDIAN' in member name 'Lame.SOUND_FORMAT.ENDIAN_CPU' by changing it to 'Endian'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ENDIAN_CPU'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ENDIAN_FILE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ENDIAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ENDIAN' in member name 'Lame.SOUND_FORMAT.ENDIAN_FILE' by changing it to 'Endian'.</Issue>
            </Message>
            <Message Id="FILE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FILE' in member name 'Lame.SOUND_FORMAT.ENDIAN_FILE' by changing it to 'File'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ENDIAN_FILE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ENDIAN_LITTLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ENDIAN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ENDIAN' in member name 'Lame.SOUND_FORMAT.ENDIAN_LITTLE' by changing it to 'Endian'.</Issue>
            </Message>
            <Message Id="LITTLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LITTLE' in member name 'Lame.SOUND_FORMAT.ENDIAN_LITTLE' by changing it to 'Little'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.ENDIAN_LITTLE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FLOAT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FLOAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FLOAT' in member name 'Lame.SOUND_FORMAT.FLOAT' by changing it to 'Float'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FORMAT_ENDMASK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ENDMASK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ENDMASK' in member name 'Lame.SOUND_FORMAT.FORMAT_ENDMASK' by changing it to 'Endmask'.</Issue>
            </Message>
            <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in member name 'Lame.SOUND_FORMAT.FORMAT_ENDMASK' by changing it to 'Format'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.FORMAT_ENDMASK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FORMAT_SUBMASK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in member name 'Lame.SOUND_FORMAT.FORMAT_SUBMASK' by changing it to 'Format'.</Issue>
            </Message>
            <Message Id="SUBMASK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUBMASK' in member name 'Lame.SOUND_FORMAT.FORMAT_SUBMASK' by changing it to 'Submask'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.FORMAT_SUBMASK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FORMAT_TYPEMASK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FORMAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FORMAT' in member name 'Lame.SOUND_FORMAT.FORMAT_TYPEMASK' by changing it to 'Format'.</Issue>
            </Message>
            <Message Id="TYPEMASK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TYPEMASK' in member name 'Lame.SOUND_FORMAT.FORMAT_TYPEMASK' by changing it to 'Typemask'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.FORMAT_TYPEMASK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#G721_32" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.G721_32'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#G723_24" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.G723_24'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#G723_40" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.G723_40'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GSM610" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GSM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GSM' in member name 'Lame.SOUND_FORMAT.GSM610' by changing it to 'Gsm'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HTK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HTK' in member name 'Lame.SOUND_FORMAT.HTK' by changing it to 'Htk'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IRCAM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IRCAM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IRCAM' in member name 'Lame.SOUND_FORMAT.IRCAM' by changing it to 'Ircam'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MATLAB4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MATLAB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MATLAB' in member name 'Lame.SOUND_FORMAT.MATLAB4' by changing it to 'Matlab'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MATLAB5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MATLAB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MATLAB' in member name 'Lame.SOUND_FORMAT.MATLAB5' by changing it to 'Matlab'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MSDS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MSDS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MSDS' in member name 'Lame.SOUND_FORMAT.MSDS' by changing it to 'Msds'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NIST" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NIST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NIST' in member name 'Lame.SOUND_FORMAT.NIST' by changing it to 'Nist'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PAF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PAF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PAF' in member name 'Lame.SOUND_FORMAT.PAF' by changing it to 'Paf'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PCM_S16" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PCM' in member name 'Lame.SOUND_FORMAT.PCM_S16' by changing it to 'Pcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.PCM_S16'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PCM_S24" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PCM' in member name 'Lame.SOUND_FORMAT.PCM_S24' by changing it to 'Pcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.PCM_S24'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PCM_S32" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PCM' in member name 'Lame.SOUND_FORMAT.PCM_S32' by changing it to 'Pcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.PCM_S32'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PCM_S8" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PCM' in member name 'Lame.SOUND_FORMAT.PCM_S8' by changing it to 'Pcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.PCM_S8'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PCM_U8" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PCM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PCM' in member name 'Lame.SOUND_FORMAT.PCM_U8' by changing it to 'Pcm'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.SOUND_FORMAT.PCM_U8'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PVF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PVF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PVF' in member name 'Lame.SOUND_FORMAT.PVF' by changing it to 'Pvf'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RAW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RAW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RAW' in member name 'Lame.SOUND_FORMAT.RAW' by changing it to 'Raw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SVX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SVX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SVX' in member name 'Lame.SOUND_FORMAT.SVX' by changing it to 'Svx'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ULAW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ULAW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ULAW' in member name 'Lame.SOUND_FORMAT.ULAW' by changing it to 'Ulaw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VOC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="VOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VOC' in member name 'Lame.SOUND_FORMAT.VOC' by changing it to 'Voc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WAV" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WAV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WAV' in member name 'Lame.SOUND_FORMAT.WAV' by changing it to 'Wav'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WAV64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WAV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WAV' in member name 'Lame.SOUND_FORMAT.WAV64' by changing it to 'Wav'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+SOUND_INFO" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'Lame.SOUND_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="SOUND" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SOUND' in type name 'Lame.SOUND_INFO' by changing it to 'Sound'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.SOUND_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Lame.SOUND_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Lame.SOUND_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#channels" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.channels' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#format" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.format' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frames" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.frames' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#samplerate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.samplerate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="samplerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'samplerate' in member name 'Lame.SOUND_INFO.samplerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sections" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.sections' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#seekable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Lame.SOUND_INFO.seekable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Lame+VBR_METHOD" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotPrefixEnumValuesWithTypeName" Category="Microsoft.Naming" CheckId="CA1712" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_ABR.</Issue>
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_DEFAULT.</Issue>
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_MTRH.</Issue>
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_NEW.</Issue>
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_NONE.</Issue>
           <Issue Certainty="95" Level="Error">Remove 'Lame.VBR_METHOD' from VBR_METHOD_OLD.</Issue>
          </Message>
          <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'METHOD' in type name 'Lame.VBR_METHOD' by changing it to 'Method'.</Issue>
          </Message>
          <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'VBR' in type name 'Lame.VBR_METHOD' by changing it to 'Vbr'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Lame.VBR_METHOD'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Lame.VBR_METHOD'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#VBR_METHOD_ABR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ABR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ABR' in member name 'Lame.VBR_METHOD.VBR_METHOD_ABR' by changing it to 'Abr'.</Issue>
            </Message>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_ABR' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_ABR' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_ABR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_METHOD_DEFAULT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'Lame.VBR_METHOD.VBR_METHOD_DEFAULT' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_DEFAULT' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_DEFAULT' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_DEFAULT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_METHOD_MTRH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_MTRH' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="MTRH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MTRH' in member name 'Lame.VBR_METHOD.VBR_METHOD_MTRH' by changing it to 'Mtrh'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_MTRH' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_MTRH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_METHOD_NEW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_NEW' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="NEW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NEW' in member name 'Lame.VBR_METHOD.VBR_METHOD_NEW' by changing it to 'New'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_NEW' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_NEW'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_METHOD_NONE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_NONE' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="NONE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NONE' in member name 'Lame.VBR_METHOD.VBR_METHOD_NONE' by changing it to 'None'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_NONE' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_NONE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VBR_METHOD_OLD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="METHOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'METHOD' in member name 'Lame.VBR_METHOD.VBR_METHOD_OLD' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="OLD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OLD' in member name 'Lame.VBR_METHOD.VBR_METHOD_OLD' by changing it to 'Old'.</Issue>
            </Message>
            <Message Id="VBR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VBR' in member name 'Lame.VBR_METHOD.VBR_METHOD_OLD' by changing it to 'Vbr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lame.VBR_METHOD.VBR_METHOD_OLD'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="LumiSoft.Media.Wave">
       <Types>
        <Type Name="WaveIn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalError">Implement IDisposable on 'WaveIn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(LumiSoft.Media.Wave.WavInDevice,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="208">'WaveIn.WaveIn(WavInDevice, int, int, int, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="208">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'WaveIn.WaveIn(WavInDevice, int, int, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Devices" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="466">Change 'WaveIn.Devices' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="230">'WaveIn.Dispose()' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="279">Modify 'WaveIn.Dispose(bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="255">Modify 'WaveIn.Dispose(bool)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="269">Modify 'WaveIn.Dispose(bool)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveInClose(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="267">'WaveIn.Dispose(bool)' calls 'WavMethods.waveInClose(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveInReset(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="244">'WaveIn.Dispose(bool)' calls 'WavMethods.waveInReset(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveInUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="253">'WaveIn.Dispose(bool)' calls 'WavMethods.waveInUnprepareHeader(IntPtr, IntPtr, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnsureBuffers()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="448">'WaveIn.EnsureBuffers()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pWavDevHandle" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'WaveIn.m_pWavDevHandle' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnWaveInProc(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="355">Modify 'WaveIn.OnWaveInProc(IntPtr, int, int, int, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessFirstBuffer(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="389">Modify 'WaveIn.ProcessFirstBuffer(object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="404">Modify 'WaveIn.ProcessFirstBuffer(object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveInUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="387">'WaveIn.ProcessFirstBuffer(object)' calls 'WavMethods.waveInUnprepareHeader(IntPtr, IntPtr, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="305">'WaveIn.Start()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stop()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="327">'WaveIn.Stop()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BufferFull" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'BufferFullHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'BufferFullHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'BufferFullHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaveIn+BufferItem" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#DataHandle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DataHandle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="119">'WaveIn.BufferItem.DataHandle.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DataSize" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DataSize()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveIn.cs" Line="135">'WaveIn.BufferItem.DataSize.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="WaveOut" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'WaveOut' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(LumiSoft.Media.Wave.WavOutDevice,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="167">'WaveOut.WaveOut(WavOutDevice, int, int, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="167">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'WaveOut.WaveOut(WavOutDevice, int, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Devices" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="399">Change 'WaveOut.Devices' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="NotCalledWithFinalizer" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="185">Change 'WaveOut.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="209">Modify 'WaveOut.Dispose()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutClose(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="202">'WaveOut.Dispose()' calls 'WavMethods.waveOutClose(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutReset(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="193">'WaveOut.Dispose()' calls 'WavMethods.waveOutReset(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="197">'WaveOut.Dispose()' calls 'WavMethods.waveOutUnprepareHeader(IntPtr, IntPtr, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="185">Modify 'WaveOut.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Finalize()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="FinalizeImplementation" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="175">Modify 'WaveOut.~WaveOut()' so that it calls Dispose(false) and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetVolume(System.UInt16&amp;,System.UInt16&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutGetVolume(System.IntPtr,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="364">'WaveOut.GetVolume(ref ushort, ref ushort)' calls 'WavMethods.waveOutGetVolume(IntPtr, out int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="358">Consider a design that does not require that 'left' be a reference parameter.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="358">Consider a design that does not require that 'right' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pWavDevHandle" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'WaveOut.m_pWavDevHandle' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnCleanUpFirstBlock(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="258">Modify 'WaveOut.OnCleanUpFirstBlock(object)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="252">'WaveOut.OnCleanUpFirstBlock(object)' calls 'WavMethods.waveOutUnprepareHeader(IntPtr, IntPtr, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnWaveOutProc(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="235">Modify 'WaveOut.OnWaveOutProc(IntPtr, int, int, int, int)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Play(System.Byte[],System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutPause(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="313">'WaveOut.Play(byte[], int, int)' calls 'WavMethods.waveOutPause(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutRestart(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="320">'WaveOut.Play(byte[], int, int)' calls 'WavMethods.waveOutRestart(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetVolume(System.UInt16,System.UInt16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LumiSoft.Media.Wave.Native.WavMethods.waveOutSetVolume(System.IntPtr,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="386">'WaveOut.SetVolume(ushort, ushort)' calls 'WavMethods.waveOutSetVolume(IntPtr, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaveOut+PlayItem" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#DataHandle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DataHandle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveOut.cs" Line="92">'WaveOut.PlayItem.DataHandle.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="LumiSoft.Media.Wave.Native">
       <Types>
        <Type Name="MMSYSERR" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'MMSYSERR' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WavConstants" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'WavConstants' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WavFormat" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'WavFormat' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WavMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'WavMethods' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#waveInAddBuffer(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInAddBuffer(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInClose(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInClose(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInGetDevCaps(System.UInt32,LumiSoft.Media.Wave.Native.WAVEOUTCAPS&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInGetDevCaps(uint, ref WAVEOUTCAPS, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwo' of P/Invoke 'WavMethods.waveInGetDevCaps(uint, ref WAVEOUTCAPS, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'uint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInGetNumDevs()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInGetNumDevs()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInOpen(System.IntPtr&amp;,System.Int32,LumiSoft.Media.Wave.Native.WAVEFORMATEX,LumiSoft.Media.Wave.Native.waveInProc,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInOpen(out IntPtr, int, WAVEFORMATEX, waveInProc, int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="4" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwInstance' of P/Invoke 'WavMethods.waveInOpen(out IntPtr, int, WAVEFORMATEX, waveInProc, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInPrepareHeader(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInPrepareHeader(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInReset(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInReset(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInStart(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInStart(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInStop(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInStop(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveInUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveInUnprepareHeader(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutClose(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutClose(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutGetDevCaps(System.UInt32,LumiSoft.Media.Wave.Native.WAVEOUTCAPS&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutGetDevCaps(uint, ref WAVEOUTCAPS, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwo' of P/Invoke 'WavMethods.waveOutGetDevCaps(uint, ref WAVEOUTCAPS, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'uint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutGetNumDevs()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutGetNumDevs()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutGetPosition(System.IntPtr,System.Int32&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'WavMethods.waveOutGetPosition(IntPtr, out int, int)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutGetPosition(IntPtr, out int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutGetVolume(System.IntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutGetVolume(IntPtr, out int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutOpen(System.IntPtr&amp;,System.Int32,LumiSoft.Media.Wave.Native.WAVEFORMATEX,LumiSoft.Media.Wave.Native.waveOutProc,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutOpen(out IntPtr, int, WAVEFORMATEX, waveOutProc, int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="4" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwInstance' of P/Invoke 'WavMethods.waveOutOpen(out IntPtr, int, WAVEFORMATEX, waveOutProc, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutPause(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutPause(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutPrepareHeader(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutPrepareHeader(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutReset(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutReset(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutRestart(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutRestart(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutSetVolume(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutSetVolume(IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutUnprepareHeader(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutWrite(System.IntPtr,System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'WavMethods.waveOutWrite(IntPtr, IntPtr, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MLifter.AudioTools">
       <Types>
        <Type Name="AudioPlayer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'AudioPlayer' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="259">Change 'AudioPlayer.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="259">Modify 'AudioPlayer.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Play(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="81">In member 'AudioPlayer.Play(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Play(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="92">In member 'AudioPlayer.Play(string, bool)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayThread()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="196">Modify 'AudioPlayer.PlayThread()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="179">Modify 'AudioPlayer.PlayThread()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="216">Modify 'AudioPlayer.PlayThread()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="202">Change 'AudioPlayer.PlayThread()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StopThread(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stopCurrentPlay" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="AudioPlayer.cs" Line="239">'stopCurrentPlay', a parameter declared in 'AudioPlayer.StopThread(bool)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Recorder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#startRecording(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Recorder.cs" Line="159">Modify 'Recorder.startRecording(object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartRecording(System.String,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Recorder.cs" Line="121">In member 'Recorder.StartRecording(string, int, int, int)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="filename" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Recorder.cs" Line="121">'filename', a parameter declared in 'Recorder.StartRecording(string, int, int, int)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StopRecording()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Recorder.cs" Line="259">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'Recorder.StopRecording()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaveDataArrived(System.Byte[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Recorder.cs" Line="203">Modify 'Recorder.WaveDataArrived(byte[])' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SoundDevicesAvailable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'SoundDevicesAvailable' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#waveInGetNumDevs()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'SoundDevicesAvailable.waveInGetNumDevs()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#waveOutGetNumDevs()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'SoundDevicesAvailable.waveOutGetNumDevs()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SoundIO" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Play(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="106">Modify 'SoundIO.Play(string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="102">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'SoundIO.Play(string, bool)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="102">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'SoundIO.Play(string, bool)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="88">In externally visible method 'SoundIO.Play(string, bool)', validate parameter 'filename' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayingFinished()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="65">The 'this' parameter (or 'Me' in Visual Basic) of 'SoundIO.PlayingFinished()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StopPlaying()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="132">Modify 'SoundIO.StopPlaying()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="119">The 'this' parameter (or 'Me' in Visual Basic) of 'SoundIO.StopPlaying()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wait()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\MP3" File="Sound.cs" Line="48">The 'this' parameter (or 'Me' in Visual Basic) of 'SoundIO.Wait()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VideoPlayer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'VideoPlayer' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="298">Change 'VideoPlayer.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message Id="video" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="298">'VideoPlayer' contains field 'VideoPlayer.video' that is of IDisposable type: 'AxWindowsMediaPlayer'. Change the Dispose method on 'VideoPlayer' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="298">Modify 'VideoPlayer.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Play(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="116">In member 'VideoPlayer.Play(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Play(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="127">In member 'VideoPlayer.Play(string, bool)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayThread()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="162">'VideoPlayer.PlayThread()' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="235">Modify 'VideoPlayer.PlayThread()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="255">Modify 'VideoPlayer.PlayThread()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="241">Change 'VideoPlayer.PlayThread()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StopThread(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stopCurrentPlay" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools" File="VideoPlayer.cs" Line="278">'stopCurrentPlay', a parameter declared in 'VideoPlayer.StopThread(bool)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#video" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'VideoPlayer.video' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaveHeader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BitsPerSample" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WaveHeader.BitsPerSample' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#channels" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WaveHeader.channels' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataLength" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WaveHeader.DataLength' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#length" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WaveHeader.length' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#samplerate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'WaveHeader.samplerate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="samplerate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'samplerate' in member name 'WaveHeader.samplerate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaveHeaderIN(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="24">In method 'WaveHeader.WaveHeaderIN(string)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="37">Object 'fs' can be disposed more than once in method 'WaveHeader.WaveHeaderIN(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 37</Issue>
            </Message>
            <Message Id="spath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="23">In method 'WaveHeader.WaveHeaderIN(string)', correct the spelling of 'spath' in parameter name 'spath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaveHeaderOUT(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="42">In method 'WaveHeader.WaveHeaderOUT(string)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="68">Object 'fs' can be disposed more than once in method 'WaveHeader.WaveHeaderOUT(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 68</Issue>
            </Message>
            <Message Id="OUT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="41">Correct the casing of 'OUT' in member name 'WaveHeader.WaveHeaderOUT(string)' by changing it to 'Out'.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Wave" File="WaveHeader.cs" Line="41">In method 'WaveHeader.WaveHeaderOUT(string)', correct the spelling of 's' in parameter name 'sPath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MLifter.AudioTools.Codecs">
       <Types>
        <Type Name="Codec" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CanDecode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_CanDecode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="203">Replace the call to 'string.operator ==(string, string)' in 'Codec.CanDecode.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CanEncode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_CanEncode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="191">Replace the call to 'string.operator ==(string, string)' in 'Codec.CanEncode.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Decode(System.IO.FileInfo,System.IO.DirectoryInfo,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="258">Consider changing the type of parameter 'tempfolder' in 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)' from 'DirectoryInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="minimizewindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="258">In method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'minimizewindow' in parameter name 'minimizewindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="showwindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="258">In method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'showwindow' in parameter name 'showwindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sourcefile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="258">In method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'sourcefile' in parameter name 'sourcefile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tempfolder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="258">In method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'tempfolder' in parameter name 'tempfolder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="259">In externally visible method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', validate parameter 'sourcefile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="259">In externally visible method 'Codec.Decode(FileInfo, DirectoryInfo, bool, bool)', validate parameter 'tempfolder' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Decode(System.IO.FileInfo,System.IO.FileInfo,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="273">Consider changing the type of parameter 'sourcefile' in 'Codec.Decode(FileInfo, FileInfo, bool, bool)' from 'FileInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="destfile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="273">In method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'destfile' in parameter name 'destfile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="minimizewindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="273">In method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'minimizewindow' in parameter name 'minimizewindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="showwindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="273">In method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'showwindow' in parameter name 'showwindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sourcefile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="273">In method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'sourcefile' in parameter name 'sourcefile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="274">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Codec.Decode(FileInfo, FileInfo, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="274">In externally visible method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', validate parameter 'sourcefile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="274">In externally visible method 'Codec.Decode(FileInfo, FileInfo, bool, bool)', validate parameter 'destfile' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecodeApp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.DecodeApp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecodeArgs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.DecodeArgs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encode(System.IO.FileInfo,System.IO.DirectoryInfo,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="290">Consider changing the type of parameter 'tempfolder' in 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)' from 'DirectoryInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="minimizewindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="290">In method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'minimizewindow' in parameter name 'minimizewindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="showwindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="290">In method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'showwindow' in parameter name 'showwindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sourcefile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="290">In method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'sourcefile' in parameter name 'sourcefile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tempfolder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="290">In method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', correct the spelling of 'tempfolder' in parameter name 'tempfolder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="291">In externally visible method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', validate parameter 'sourcefile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="291">In externally visible method 'Codec.Encode(FileInfo, DirectoryInfo, bool, bool)', validate parameter 'tempfolder' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encode(System.IO.FileInfo,System.IO.FileInfo,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="305">Consider changing the type of parameter 'sourcefile' in 'Codec.Encode(FileInfo, FileInfo, bool, bool)' from 'FileInfo' to its base type 'FileSystemInfo'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="destfile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="305">In method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'destfile' in parameter name 'destfile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="minimizewindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="305">In method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'minimizewindow' in parameter name 'minimizewindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="showwindow" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="305">In method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'showwindow' in parameter name 'showwindow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sourcefile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="305">In method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', correct the spelling of 'sourcefile' in parameter name 'sourcefile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="306">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Codec.Encode(FileInfo, FileInfo, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="306">In externally visible method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', validate parameter 'sourcefile' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="306">In externally visible method 'Codec.Encode(FileInfo, FileInfo, bool, bool)', validate parameter 'destfile' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeApp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.EncodeApp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeArgs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.EncodeArgs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="388">'obj', a parameter, is cast to type 'Codec' multiple times in method 'Codec.Equals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extension" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.extension' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#name" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Codec.name' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="179">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Codec.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="216">The 'this' parameter (or 'Me' in Visual Basic) of 'Codec.Validate(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Codecs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Codecs' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Codecs' conflicts in whole or in part with the namespace name 'MLifter.AudioTools.Codecs'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#decodeCodecs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="decode" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="96">Correct the casing of 'decode' in member name 'Codecs.decodeCodecs' by changing it to 'Decode'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_decodeCodecs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="100">In method 'Codecs.decodeCodecs.get()', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DefaultXML" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="132">Correct the casing of 'XML' in member name 'Codecs.DefaultXML' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#encodeCodecs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="encode" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="79">Correct the casing of 'encode' in member name 'Codecs.encodeCodecs' by changing it to 'Encode'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_encodeCodecs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
               <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="83">In method 'Codecs.encodeCodecs.get()', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#XMLString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="48">Correct the casing of 'XML' in member name 'Codecs.XMLString' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_XMLString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
               <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="50">In method 'Codecs.XMLString.get()', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_XMLString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
               <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="Codec.cs" Line="60">In method 'Codecs.XMLString.set(string)', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CodecSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BrowseApp(System.Windows.Forms.TextBox)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="201">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'CodecSettings.BrowseApp(TextBox)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="198">'CodecSettings.BrowseApp(TextBox)' passes 'CultureInfo.InvariantCulture' as the 'StringComparison' parameter to 'string.StartsWith(string, bool, CultureInfo)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Codecs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="104">Change 'CodecSettings.Codecs' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="104">Change 'Codecs' in 'CodecSettings.Codecs' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Codecs(MLifter.AudioTools.Codecs.Codecs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="105">In externally visible method 'CodecSettings.Codecs.set(Codecs)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#comboBoxFormat_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="159">Method 'CodecSettings.comboBoxFormat_SelectedIndexChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Decoding (,  =&gt; , )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="158">Method 'CodecSettings.comboBoxFormat_SelectedIndexChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Encoding (,  =&gt; , )".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="158">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CodecSettings.comboBoxFormat_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="159">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CodecSettings.comboBoxFormat_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableDecodeSettings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="94">Because property 'CodecSettings.EnableDecodeSettings' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableEncodeSettings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.cs" Line="82">Because property 'CodecSettings.EnableEncodeSettings' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="297">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Cancel".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="285">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="171">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Application".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="240">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Application".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="162">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Arguments".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="231">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Arguments".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="367">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Codec Settings".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="92">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Codec settings".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="126">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Configure file format:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="211">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Decoding".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="142">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Encoding".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="115">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "For the command line arguments, you have to include the following placeholders:\r...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="341">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Minimize program windows".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="325">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show decoder program window".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="314">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show encoder program window".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="CodecSettings.Designer.cs" Line="303">Method 'CodecSettings.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Application (*.exe)|*.exe".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MLifterAudioTools.Codecs">
       <Types>
        <Type Name="ForumLink" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="ForumLink.Designer.cs" Line="57">Method 'ForumLink.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Visit the MemoryLifter Forum for information and help.".</Issue>
            </Message>
            <Message Id="MemoryLifter" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="ForumLink.Designer.cs" Line="57">Correct the spelling of the unrecognized token 'MemoryLifter' in the literal '"Visit the MemoryLifter Forum for information and help."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#linkLabel_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2013-10-23 21:39:59Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\Projects\Memory Lifter\MemoryLifter\Main\MLifter.AudioTools\Codecs" File="ForumLink.cs" Line="48">Modify 'ForumLink.linkLabel_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Resolution Name="NotCalledWithFinalizer">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   <Resolution Name="OutsideDispose">{0} calls {1}, a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 37</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPrefixEnumValuesWithTypeName" Category="Microsoft.Naming" CheckId="CA1712">
   <Name>Do not prefix enum values with type name</Name>
   <Description>The individual values that make up an enumeration type should not be prefixed with the type name.</Description>
   <Resolution Name="Default">Remove {1} from {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182237(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028">
   <Name>Enum storage should be Int32</Name>
   <Description>There is little or no benefit to using a type smaller than Int32. You might require a type that is larger than Int32 if: 1) the enumeration values are flags and there are or will be many (&amp;amp;gt;32) values, or 2) the type needs to be different from Int32 for backward compatibility. Avoid using an underlying type that is not integral.</Description>
   <Resolution Name="NotIntegral">If possible, make the underlying type of {0} Int32 instead of {1}. Otherwise consider Byte, Int16, or Int64.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182147(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="FinalizeImplementation">Modify {0} so that it calls Dispose(false) and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
   <Name>Properties should not be write only</Name>
   <Description>Write-only properties usually indicate a flawed design.</Description>
   <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182165(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="FieldImplicitAnsi">To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Resolution>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049">
   <Name>Types that own native resources should be disposable</Name>
   <Description>Types that allocate unmanaged resources should implement IDisposable to allow callers to release those resources on demand. Failure to implement IDisposable can result in unmanaged resources being unavailable or underutilized.</Description>
   <Resolution Name="Default">Implement IDisposable on {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182173(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182294(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="reliabilityrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
